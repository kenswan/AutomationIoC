name: Continuous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**/README.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**/README.md"
  release:
    types:
      - published

jobs:
  build-runtime:
    uses: ./.github/workflows/template-build-test-project.yml
    with:
      name: "AutomationIoC.Runtime Build"
      source-directory: ./src/Runtime/src
      source-project: AutomationIoC.Runtime.csproj
      test-directory: ./src/Runtime/test
      test-project: AutomationIoC.Runtime.Test.csproj

  build-commandline:
    uses: ./.github/workflows/template-build-test-project.yml
    with:
      name: "AutomationIoC.CommandLine Build"
      source-directory: ./src/CommandLine/src
      source-project: AutomationIoC.CommandLine.csproj
      test-directory: ./src/CommandLine/test
      test-project: AutomationIoC.CommandLine.Test.csproj

  build-powershell:
    uses: ./.github/workflows/template-build-test-project.yml
    with:
      name: "AutomationIoC.PowerShell Build"
      source-directory: ./src/PowerShell/PowerShell/src
      source-project: AutomationIoC.PowerShell.csproj
      test-directory: ./src/PowerShell/PowerShell/test
      test-project: AutomationIoC.PowerShell.Test.csproj

  build-powershell-tools:
    uses: ./.github/workflows/template-build-test-project.yml
    with:
      name: "AutomationIoC.PowerShell.Tools Build"
      source-directory: ./src/PowerShell/Tools/src
      source-project: AutomationIoC.PowerShell.Tools.csproj
      test-directory: ./src/PowerShell/Tools/test
      test-project: AutomationIoC.PowerShell.Tools.Test.csproj

  build-samples:
    uses: ./.github/workflows/template-build-test-solution.yml
    with:
      name: "AutomationIoC.Samples Build"
      working-directory: ./samples

  release-runtime:
    needs: [build-runtime, build-samples]
    if: github.event_name == 'release'
    uses: ./.github/workflows/template-release-nuget-package.yml
    with:
      name: "AutomationIoC.Runtime Release"
      source-project-path: ./Runtime/src/AutomationIoC.Runtime.csproj
      source-release-path: ./Runtime/src/bin/Release
      working-directory: ./src
      version: ${{ github.event.release.tag_name }}
    secrets: inherit

  release-commandline:
    needs: [build-commandline, build-samples]
    if: github.event_name == 'release'
    uses: ./.github/workflows/template-release-nuget-package.yml
    with:
      name: "AutomationIoC.CommandLine Release"
      source-project-path: ./CommandLine/src/AutomationIoC.CommandLine.csproj
      source-release-path: ./CommandLine/src/bin/Release
      working-directory: ./src
      version: ${{ github.event.release.tag_name }}
    secrets: inherit

  release-powershell:
    needs: [build-powershell, build-samples]
    if: github.event_name == 'release'
    uses: ./.github/workflows/template-release-nuget-package.yml
    with:
      name: "AutomationIoC.PowerShell Release"
      source-project-path: ./PowerShell/PowerShell/src/AutomationIoC.PowerShell.csproj
      source-release-path: ./PowerShell/PowerShell/src/bin/Release
      working-directory: ./src
      version: ${{ github.event.release.tag_name }}
    secrets: inherit

  release-powershell-tools:
    needs: [build-powershell-tools, build-samples]
    if: github.event_name == 'release'
    uses: ./.github/workflows/template-release-nuget-package.yml
    with:
      name: "AutomationIoC.PowerShell.Tools Release"
      source-project-path: ./PowerShell/Tools/src/AutomationIoC.PowerShell.Tools.csproj
      source-release-path: ./PowerShell/Tools/src/bin/Release
      working-directory: ./src
      version: ${{ github.event.release.tag_name }}
    secrets: inherit
